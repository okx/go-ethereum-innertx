package contractverifier

import (
	"encoding/hex"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/crypto"
)

type contractInfo struct {
	addr        common.Address
	code        []byte
	create2Salt []byte

	methodID map[string][]byte
}

func getCreateFactoryAInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract createFactoryA {
	  createFactoryB facb;
	  address public creator;
	  createFactoryB[] public list_of_b;

	  constructor() {
	      creator = msg.sender;
	  }

	  function createB() public returns (address) {
	    facb = new createFactoryB(msg.sender);
	    list_of_b.push(facb);
	    return address(facb);
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e4f806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f14610046578063324f117114610064578063dbdc275d14610094575b600080fd5b61004e6100b2565b60405161005b91906102a2565b60405180910390f35b61007e60048036038101906100799190610257565b6100d8565b60405161008b91906102bd565b60405180910390f35b61009c610117565b6040516100a991906102a2565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106100e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003360405161012690610235565b61013091906102a2565b604051809103906000f08015801561014c573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ab38061036783390190565b6000813590506102518161034f565b92915050565b60006020828403121561026d5761026c61034a565b5b600061027b84828501610242565b91505092915050565b61028d816102d8565b82525050565b61029c81610314565b82525050565b60006020820190506102b76000830184610284565b92915050565b60006020820190506102d26000830184610293565b92915050565b60006102e3826102ea565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061031f82610326565b9050919050565b600061033182610338565b9050919050565b6000610343826102ea565b9050919050565b600080fd5b6103588161030a565b811461036357600080fd5b5056fe608060405234801561001057600080fd5b50604051610ab3380380610ab38339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61099b806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f14610046578063af4ac39014610064578063eadf91e314610094575b600080fd5b61004e61009e565b60405161005b9190610268565b60405180910390f35b61007e6004803603810190610079919061021d565b6100c4565b60405161008b9190610283565b60405180910390f35b61009c610103565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106100d457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33604051610110906101fb565b61011a9190610268565b604051809103906000f080158015610136573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6106398061032d83390190565b60008135905061021781610315565b92915050565b60006020828403121561023357610232610310565b5b600061024184828501610208565b91505092915050565b6102538161029e565b82525050565b610262816102da565b82525050565b600060208201905061027d600083018461024a565b92915050565b60006020820190506102986000830184610259565b92915050565b60006102a9826102b0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e5826102ec565b9050919050565b60006102f7826102fe565b9050919050565b6000610309826102b0565b9050919050565b600080fd5b61031e816102d0565b811461032957600080fd5b5056fe608060405234801561001057600080fd5b506040516106393803806106398339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b610521806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f146100465780635204f7c314610064578063b4ff1c131461006e575b600080fd5b61004e61009e565b60405161005b919061025d565b60405180910390f35b61006c6100c4565b005b61008860048036038101906100839190610212565b6101b1565b6040516100959190610278565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040516100d0906101f0565b604051809103906000f0801580156100ec573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106101c157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ca8061032283390190565b60008135905061020c8161030a565b92915050565b60006020828403121561022857610227610305565b5b6000610236848285016101fd565b91505092915050565b61024881610293565b82525050565b610257816102cf565b82525050565b6000602082019050610272600083018461023f565b92915050565b600060208201905061028d600083018461024e565b92915050565b600061029e826102a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102da826102e1565b9050919050565b60006102ec826102f3565b9050919050565b60006102fe826102a5565b9050919050565b600080fd5b610313816102c5565b811461031e57600080fd5b5056fe608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea264697066735822122018735ef9f776ac02c8d4e4f7c39758aaaa109841f6b080d7d455a27b4b3f9f2364736f6c63430008070033a2646970667358221220e9bd95209f90fff19cb7a9b59f557d722c1641a2aaebf9f61a6c94d472615cfd64736f6c63430008070033a2646970667358221220b03f2764aef0fd6c3d3262ca6067dda0b6696e88ef18fd93df9c109e2b7e3ff264736f6c63430008070033a264697066735822122079bf85dbd19b4acf789a3e72bf9a2077abe9a0991b710bd912c7aa602b58480b64736f6c63430008070033")
	createB, _ := hex.DecodeString("dbdc275d")
	creator, _ := hex.DecodeString("02d05d3f")
	listOfB, _ := hex.DecodeString("324f1171")

	return contractInfo{
		// addr field is not initialized here
		code: code,

		methodID: map[string][]byte{
			"createB":   createB,
			"creator":   creator,
			"list_of_b": listOfB,
		},
	}
}

func getCreateFactoryBInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract createFactoryB {
	  createFactoryC facc;
	  address public creator;
	  createFactoryC[] public list_of_c;

	  constructor(address _creator) {
	      creator = _creator;
	  }

	  function createC() public {
	    facc = new createFactoryC(msg.sender);
	    list_of_c.push(facc);
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b50604051610ab3380380610ab38339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61099b806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f14610046578063af4ac39014610064578063eadf91e314610094575b600080fd5b61004e61009e565b60405161005b9190610268565b60405180910390f35b61007e6004803603810190610079919061021d565b6100c4565b60405161008b9190610283565b60405180910390f35b61009c610103565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106100d457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33604051610110906101fb565b61011a9190610268565b604051809103906000f080158015610136573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6106398061032d83390190565b60008135905061021781610315565b92915050565b60006020828403121561023357610232610310565b5b600061024184828501610208565b91505092915050565b6102538161029e565b82525050565b610262816102da565b82525050565b600060208201905061027d600083018461024a565b92915050565b60006020820190506102986000830184610259565b92915050565b60006102a9826102b0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e5826102ec565b9050919050565b60006102f7826102fe565b9050919050565b6000610309826102b0565b9050919050565b600080fd5b61031e816102d0565b811461032957600080fd5b5056fe608060405234801561001057600080fd5b506040516106393803806106398339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b610521806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f146100465780635204f7c314610064578063b4ff1c131461006e575b600080fd5b61004e61009e565b60405161005b919061025d565b60405180910390f35b61006c6100c4565b005b61008860048036038101906100839190610212565b6101b1565b6040516100959190610278565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040516100d0906101f0565b604051809103906000f0801580156100ec573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106101c157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ca8061032283390190565b60008135905061020c8161030a565b92915050565b60006020828403121561022857610227610305565b5b6000610236848285016101fd565b91505092915050565b61024881610293565b82525050565b610257816102cf565b82525050565b6000602082019050610272600083018461023f565b92915050565b600060208201905061028d600083018461024e565b92915050565b600061029e826102a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102da826102e1565b9050919050565b60006102ec826102f3565b9050919050565b60006102fe826102a5565b9050919050565b600080fd5b610313816102c5565b811461031e57600080fd5b5056fe608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea264697066735822122018735ef9f776ac02c8d4e4f7c39758aaaa109841f6b080d7d455a27b4b3f9f2364736f6c63430008070033a2646970667358221220e9bd95209f90fff19cb7a9b59f557d722c1641a2aaebf9f61a6c94d472615cfd64736f6c63430008070033a2646970667358221220b03f2764aef0fd6c3d3262ca6067dda0b6696e88ef18fd93df9c109e2b7e3ff264736f6c63430008070033")
	createC, _ := hex.DecodeString("eadf91e3")
	creator, _ := hex.DecodeString("02d05d3f")
	listOfC, _ := hex.DecodeString("af4ac390")

	return contractInfo{
		// addr field is not initialized here
		code: code,

		methodID: map[string][]byte{
			"createC":   createC,
			"creator":   creator,
			"list_of_c": listOfC,
		},
	}
}

func getCreateFactoryCInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract createFactoryC {
	  Bank bank;
	  address public creator;
	  Bank[] public list_of_banks;

	  constructor(address _creator) {
	      creator = _creator;
	  }

	  function createBank() public {
	    bank = new Bank();
	    list_of_banks.push(bank);
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b506040516106393803806106398339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b610521806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f146100465780635204f7c314610064578063b4ff1c131461006e575b600080fd5b61004e61009e565b60405161005b919061025d565b60405180910390f35b61006c6100c4565b005b61008860048036038101906100839190610212565b6101b1565b6040516100959190610278565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040516100d0906101f0565b604051809103906000f0801580156100ec573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106101c157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ca8061032283390190565b60008135905061020c8161030a565b92915050565b60006020828403121561022857610227610305565b5b6000610236848285016101fd565b91505092915050565b61024881610293565b82525050565b610257816102cf565b82525050565b6000602082019050610272600083018461023f565b92915050565b600060208201905061028d600083018461024e565b92915050565b600061029e826102a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102da826102e1565b9050919050565b60006102ec826102f3565b9050919050565b60006102fe826102a5565b9050919050565b600080fd5b610313816102c5565b811461031e57600080fd5b5056fe608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea264697066735822122018735ef9f776ac02c8d4e4f7c39758aaaa109841f6b080d7d455a27b4b3f9f2364736f6c63430008070033a2646970667358221220e9bd95209f90fff19cb7a9b59f557d722c1641a2aaebf9f61a6c94d472615cfd64736f6c63430008070033")
	createBank, _ := hex.DecodeString("5204f7c3")
	creator, _ := hex.DecodeString("02d05d3f")
	listOfBanks, _ := hex.DecodeString("b4ff1c13")

	return contractInfo{
		// addr field is not initialized here
		code: code,

		methodID: map[string][]byte{
			"createBank":    createBank,
			"creator":       creator,
			"list_of_banks": listOfBanks,
		},
	}
}

func getBankInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract Bank {
	  uint256 public bank_num;
	  address public deployer;

	  constructor() {
	    deployer = msg.sender;
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea264697066735822122018735ef9f776ac02c8d4e4f7c39758aaaa109841f6b080d7d455a27b4b3f9f2364736f6c63430008070033")
	bankNum, _ := hex.DecodeString("c9c30a11")
	deployer, _ := hex.DecodeString("d5f39488")

	return contractInfo{
		// addr field is not initialized here
		code: code,

		methodID: map[string][]byte{
			"bank_num": bankNum,
			"deployer": deployer,
		},
	}
}
func getCreate2FactoryAInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract create2FactoryA {
	  create2FactoryB facb;
	  address public creator;
	  create2FactoryB[] public list_of_b;

	  constructor() {
	      creator = msg.sender;
	  }

	  function createB() public returns (address) {
	    facb = new create2FactoryB{salt: bytes32(uint256(0x0a))}(msg.sender);
	    list_of_b.push(facb);
	    return address(facb);
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e6a806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f14610046578063324f117114610064578063dbdc275d14610094575b600080fd5b61004e6100b2565b60405161005b91906102ab565b60405180910390f35b61007e60048036038101906100799190610260565b6100d8565b60405161008b91906102c6565b60405180910390f35b61009c610117565b6040516100a991906102ab565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106100e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60001b3360405161012b9061023e565b61013591906102ab565b8190604051809103906000f5905080158015610155573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ac58061037083390190565b60008135905061025a81610358565b92915050565b60006020828403121561027657610275610353565b5b60006102848482850161024b565b91505092915050565b610296816102e1565b82525050565b6102a58161031d565b82525050565b60006020820190506102c0600083018461028d565b92915050565b60006020820190506102db600083018461029c565b92915050565b60006102ec826102f3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103288261032f565b9050919050565b600061033a82610341565b9050919050565b600061034c826102f3565b9050919050565b600080fd5b61036181610313565b811461036c57600080fd5b5056fe608060405234801561001057600080fd5b50604051610ac5380380610ac58339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b6109ad806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f14610046578063af4ac39014610064578063eadf91e314610094575b600080fd5b61004e61009e565b60405161005b9190610271565b60405180910390f35b61007e60048036038101906100799190610226565b6100c4565b60405161008b919061028c565b60405180910390f35b61009c610103565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106100d457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60001b3360405161011590610204565b61011f9190610271565b8190604051809103906000f590508015801561013f573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6106428061033683390190565b6000813590506102208161031e565b92915050565b60006020828403121561023c5761023b610319565b5b600061024a84828501610211565b91505092915050565b61025c816102a7565b82525050565b61026b816102e3565b82525050565b60006020820190506102866000830184610253565b92915050565b60006020820190506102a16000830184610262565b92915050565b60006102b2826102b9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102ee826102f5565b9050919050565b600061030082610307565b9050919050565b6000610312826102b9565b9050919050565b600080fd5b610327816102d9565b811461033257600080fd5b5056fe608060405234801561001057600080fd5b506040516106423803806106428339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61052a806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f146100465780635204f7c314610064578063b4ff1c131461006e575b600080fd5b61004e61009e565b60405161005b9190610266565b60405180910390f35b61006c6100c4565b005b6100886004803603810190610083919061021b565b6101ba565b6040516100959190610281565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60001b6040516100d5906101f9565b8190604051809103906000f59050801580156100f5573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ca8061032b83390190565b60008135905061021581610313565b92915050565b6000602082840312156102315761023061030e565b5b600061023f84828501610206565b91505092915050565b6102518161029c565b82525050565b610260816102d8565b82525050565b600060208201905061027b6000830184610248565b92915050565b60006020820190506102966000830184610257565b92915050565b60006102a7826102ae565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e3826102ea565b9050919050565b60006102f5826102fc565b9050919050565b6000610307826102ae565b9050919050565b600080fd5b61031c816102ce565b811461032757600080fd5b5056fe608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea26469706673582212207011d48dcf0a248526d973da4626f427e90429d62be3874ec6d865c29a00ac3664736f6c63430008070033a2646970667358221220afd97d622c72e4daaf90ecffd6947cb2350928c320e28b7d43e67bf8e17fc8ef64736f6c63430008070033a2646970667358221220381c740f726bd5603b809772734928ca136df96d3fec4c3b5f0d5fef943db8f464736f6c63430008070033a2646970667358221220ff04c95f1a1e3ae4f34e667220b51d9cf72d0e7209501214e9c3178e476e499864736f6c63430008070033")
	createB, _ := hex.DecodeString("dbdc275d")
	creator, _ := hex.DecodeString("02d05d3f")
	listOfB, _ := hex.DecodeString("324f1171")

	return contractInfo{
		// addr field is not initialized here
		code:        code,
		create2Salt: []byte{0x0a},

		methodID: map[string][]byte{
			"createB":   createB,
			"creator":   creator,
			"list_of_b": listOfB,
		},
	}
}

func getCreate2FactoryBInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract create2FactoryB {
	  create2FactoryC facc;
	  address public creator;
	  create2FactoryC[] public list_of_c;

	  constructor(address _creator) {
	      creator = _creator;
	  }

	  function createC() public {
	    facc = new create2FactoryC{salt:bytes32(uint256(0x0b))}(msg.sender);
	    list_of_c.push(facc);
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b50604051610ac5380380610ac58339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b6109ad806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f14610046578063af4ac39014610064578063eadf91e314610094575b600080fd5b61004e61009e565b60405161005b9190610271565b60405180910390f35b61007e60048036038101906100799190610226565b6100c4565b60405161008b919061028c565b60405180910390f35b61009c610103565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106100d457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60001b3360405161011590610204565b61011f9190610271565b8190604051809103906000f590508015801561013f573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6106428061033683390190565b6000813590506102208161031e565b92915050565b60006020828403121561023c5761023b610319565b5b600061024a84828501610211565b91505092915050565b61025c816102a7565b82525050565b61026b816102e3565b82525050565b60006020820190506102866000830184610253565b92915050565b60006020820190506102a16000830184610262565b92915050565b60006102b2826102b9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102ee826102f5565b9050919050565b600061030082610307565b9050919050565b6000610312826102b9565b9050919050565b600080fd5b610327816102d9565b811461033257600080fd5b5056fe608060405234801561001057600080fd5b506040516106423803806106428339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61052a806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f146100465780635204f7c314610064578063b4ff1c131461006e575b600080fd5b61004e61009e565b60405161005b9190610266565b60405180910390f35b61006c6100c4565b005b6100886004803603810190610083919061021b565b6101ba565b6040516100959190610281565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60001b6040516100d5906101f9565b8190604051809103906000f59050801580156100f5573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ca8061032b83390190565b60008135905061021581610313565b92915050565b6000602082840312156102315761023061030e565b5b600061023f84828501610206565b91505092915050565b6102518161029c565b82525050565b610260816102d8565b82525050565b600060208201905061027b6000830184610248565b92915050565b60006020820190506102966000830184610257565b92915050565b60006102a7826102ae565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e3826102ea565b9050919050565b60006102f5826102fc565b9050919050565b6000610307826102ae565b9050919050565b600080fd5b61031c816102ce565b811461032757600080fd5b5056fe608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea26469706673582212207011d48dcf0a248526d973da4626f427e90429d62be3874ec6d865c29a00ac3664736f6c63430008070033a2646970667358221220afd97d622c72e4daaf90ecffd6947cb2350928c320e28b7d43e67bf8e17fc8ef64736f6c63430008070033a2646970667358221220381c740f726bd5603b809772734928ca136df96d3fec4c3b5f0d5fef943db8f464736f6c63430008070033")
	createC, _ := hex.DecodeString("eadf91e3")
	creator, _ := hex.DecodeString("02d05d3f")
	listOfC, _ := hex.DecodeString("af4ac390")

	return contractInfo{
		// addr field is not initialized here
		code:        code,
		create2Salt: []byte{0x0b},

		methodID: map[string][]byte{
			"createC":   createC,
			"creator":   creator,
			"list_of_c": listOfC,
		},
	}
}

func getCreate2FactoryCInfo() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract create2FactoryC {
	  Bank2 bank;
	  address public creator;
	  Bank2[] public list_of_banks;

	  constructor(address _creator) {
	      creator = _creator;
	  }

	  function createBank() public {
	    bank = new Bank2{salt:bytes32(uint256(0x0c))}();
	    list_of_banks.push(bank);
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b506040516106423803806106428339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61052a806101186000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d05d3f146100465780635204f7c314610064578063b4ff1c131461006e575b600080fd5b61004e61009e565b60405161005b9190610266565b60405180910390f35b61006c6100c4565b005b6100886004803603810190610083919061021b565b6101ba565b6040516100959190610281565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60001b6040516100d5906101f9565b8190604051809103906000f59050801580156100f5573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ca8061032b83390190565b60008135905061021581610313565b92915050565b6000602082840312156102315761023061030e565b5b600061023f84828501610206565b91505092915050565b6102518161029c565b82525050565b610260816102d8565b82525050565b600060208201905061027b6000830184610248565b92915050565b60006020820190506102966000830184610257565b92915050565b60006102a7826102ae565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e3826102ea565b9050919050565b60006102f5826102fc565b9050919050565b6000610307826102ae565b9050919050565b600080fd5b61031c816102ce565b811461032757600080fd5b5056fe608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea26469706673582212207011d48dcf0a248526d973da4626f427e90429d62be3874ec6d865c29a00ac3664736f6c63430008070033a2646970667358221220afd97d622c72e4daaf90ecffd6947cb2350928c320e28b7d43e67bf8e17fc8ef64736f6c63430008070033")
	createBank, _ := hex.DecodeString("5204f7c3")
	creator, _ := hex.DecodeString("02d05d3f")
	listOfBanks, _ := hex.DecodeString("b4ff1c13")

	return contractInfo{
		// addr field is not initialized here
		code:        code,
		create2Salt: []byte{0x0c},

		methodID: map[string][]byte{
			"createBank":    createBank,
			"creator":       creator,
			"list_of_banks": listOfBanks,
		},
	}
}

func getBank2Info() contractInfo {
	/* contract source:
	// SPDX-License-Identifier: GPL-3.0

	//
	// compiler version: solidity 0.8.7+commit.e28d00a7
	//
	pragma solidity >=0.7.0 <0.9.0;

	contract Bank2 {
	  uint256 public bank_num;
	  address public deployer;

	  constructor() {
	    deployer = msg.sender;
	  }
	}
	*/

	code, _ := hex.DecodeString("608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610169806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c30a111461003b578063d5f3948814610059575b600080fd5b610043610077565b60405161005091906100dc565b60405180910390f35b61006161007d565b60405161006e91906100c1565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ac816100f7565b82525050565b6100bb81610129565b82525050565b60006020820190506100d660008301846100a3565b92915050565b60006020820190506100f160008301846100b2565b92915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea26469706673582212207011d48dcf0a248526d973da4626f427e90429d62be3874ec6d865c29a00ac3664736f6c63430008070033")
	bankNum, _ := hex.DecodeString("c9c30a11")
	deployer, _ := hex.DecodeString("d5f39488")

	return contractInfo{
		// addr field is not initialized here
		code: code,

		methodID: map[string][]byte{
			"bank_num": bankNum,
			"deployer": deployer,
		},
	}
}

func (ci contractInfo) codehash(caller *common.Address) []byte {
	if caller != nil {
		return codeHash(append(ci.code, caller.Hash().Bytes()...))
	}
	return codeHash(ci.code)
}

func codeHash(code []byte) []byte {
	return crypto.Keccak256Hash(code).Bytes()
}
